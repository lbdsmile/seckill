## thymeleaf ##
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
# \u662F\u5426\u5F00\u542F\u7F13\u5B58
spring.thymeleaf.cache=false
spring.thymeleaf.content-type=text/html
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML5

## mybatis ##
# \u914D\u7F6E\u5B9E\u4F53\u7684\u626B\u63CF\u5305\u8DEF\u5F84
mybatis.type-aliases-package=com.smlie.seckill.domain
# \u662F\u5426\u5C06\u4E0B\u5212\u7EBF\u547D\u540D\u8F6C\u6362\u6210\u9A7C\u5CF0\u547D\u540D
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.default-fetch-size=100
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4
mybatis.configuration.default-statement-timeout=3000
# mapper \u6587\u4EF6\u7684\u626B\u63CF\u8DEF\u5F84
mybatis.mapperLocations = classpath:com/smile/seckill/dao/*.xml
#mybatis.mapperLocations = classpath:com/smile/seckill/dao/*Mapper.xml

## druid \u6570\u636E\u6E90\u914D\u7F6E ##
spring.datasource.url=jdbc:mysql://localhost:3307/seckill?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.filters=stat
spring.datasource.maxActive=2
spring.datasource.initialSize=1
spring.datasource.maxWait=60000
spring.datasource.minIdle=1
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20

#static
spring.resources.add-mappings=true
spring.resources.cache-period= 3600
spring.resources.chain.cache=true 
spring.resources.chain.enabled=true
spring.resources.chain.gzipped=true
spring.resources.chain.html-application-cache=true
spring.resources.static-locations=classpath:/static/

## Redis ##
# Redis \u670D\u52A1ip\u5730\u5740
redis.host=192.168.100.5
# Redis \u670D\u52A1\u7AEF\u53E3\u53F7
redis.port=6379
# Redis \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4,\u5355\u4F4D \u79D2s
redis.timeout=3
# Redis \u767B\u5F55\u5BC6\u7801
redis.password=123456
# Redis \u8FDE\u63A5\u6C60\u4E2D\u603B\u8FDE\u63A5\u7684\u6700\u5927\u6570\u91CF
redis.poolMaxTotal=10
# Redis \u8FDE\u63A5\u6C60\u4E2D\u7A7A\u95F2\u8FDE\u63A5\u7684\u6700\u5927\u6570\u91CF
redis.poolMaxIdle=10
# Redis \u83B7\u53D6\u8FDE\u63A5\u7684\u6700\u5927\u7B49\u5F85\u65F6\u95F4,\u5355\u4F4D \u79D2s
redis.poolMaxWait=3

## RabbitMQ ##
# RabbitMQ \u670D\u52A1ip\u5730\u5740
spring.rabbitmq.host=192.168.100.5
# RabbitMQ \u670D\u52A1\u7AEF\u53E3\u53F7
spring.rabbitmq.port=5672
# RabbitMQ \u7528\u6237\u540D
spring.rabbitmq.username=guest
# RabbitMQ \u5BC6\u7801
spring.rabbitmq.password=guest
# RabbitMQ \u9ED8\u8BA4\u7528\u6237\u8BBF\u95EE\u7684\u670D\u52A1\u5668\u8DEF\u5F84
spring.rabbitmq.virtual-host=/
# RabbitMQ \u6D88\u8D39\u7AEF\u7684\u76D1\u542C\u4E2A\u6570(\u5373@RabbitListener\u5F00\u542F\u51E0\u4E2A\u7EBF\u7A0B\u53BB\u5904\u7406\u6570\u636E\u3002)
spring.rabbitmq.listener.simple.concurrency= 10
# RabbitMQ \u6D88\u8D39\u7AEF\u7684\u76D1\u542C\u6700\u5927\u4E2A\u6570
spring.rabbitmq.listener.simple.max-concurrency= 10
# RabbitMQ \u6BCF\u4E2A\u6D88\u8D39\u8005\u6BCF\u6B21\u4ECE\u961F\u5217\u83B7\u53D6\u7684\u6D88\u606F\u6570\u91CF\uFF0C\u5373\u6BCF\u6B21\u9884\u53D6\u6D88\u606F\u653E\u5165\u5185\u5B58\u7684LinkedBlockingQueue\u4E2D\u8FDB\u884C\u6D88\u8D39\u7684\u6570\u91CF
spring.rabbitmq.listener.simple.prefetch= 1
# RabbitMQ \u6D88\u8D39\u8005\u81EA\u52A8\u542F\u52A8
spring.rabbitmq.listener.simple.auto-startup=true
# RabbitMQ \u6D88\u8D39\u5931\u8D25\uFF0C\u81EA\u52A8\u91CD\u65B0\u5165\u961F
spring.rabbitmq.listener.simple.default-requeue-rejected= true
# RabbitMQ \u542F\u7528\u53D1\u9001\u91CD\u8BD5
spring.rabbitmq.template.retry.enabled=true 
# RabbitMQ 1000ms \u540E\u91CD\u8BD5\u4E00\u6B21
spring.rabbitmq.template.retry.initial-interval=1000 
# RabbitMQ \u6700\u5927\u91CD\u8BD5\u6B21\u6570
spring.rabbitmq.template.retry.max-attempts=3
# RabbitMQ \u6700\u5927\u91CD\u8BD5\u95F4\u9694 10s
spring.rabbitmq.template.retry.max-interval=10000
# RabbitMQ \u9636\u68AF\u6027\u91CD\u8BD5\u500D\u6570\u8BBE\u7F6E\uFF0C\u914D\u7F6E1\u4E3A\u76F8\u7B49\u65F6\u95F4\u91CD\u8BD5\u3002\u5982\u679C\u914D\u7F6E2\uFF0C\u5219\u7B2C\u4E00\u6B211s\u540E\u91CD\u8BD5\uFF0C\u7B2C\u4E8C\u6B21\u7B49\u5F852s\uFF0C\u7B2C\u4E09\u6B21\u7B49\u5F854s
spring.rabbitmq.template.retry.multiplier=1.0
